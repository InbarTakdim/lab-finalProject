var app = angular.module('tableApp',[]);

app.controller('bodyTable', function ($scope) {
    //$scope.days=["ראשון" , "שני" , "שלישי" , "רביעי" , "חמישי" , "שישי", "שבת"];
    $scope.days=[{name:"ראשון" , counter:0},
                 {name:"שני" , counter:0},
                 {name:"שלישי" , counter:0},
                 {name:"רביעי" , counter:0},
                 {name:"חמישי" , counter:0},
                 {name:"שישי" , counter:0},
                 {name:"שבת" , counter:0} 
                ];
    $scope.pepole=["ביבי" , "בוזי" , "שלי יחיימוביץ", "בלה בלה", "בוב מארלי"];
    $scope.statuses=[{name:"ביבי" , day:"ראשון"},
                   {name:"ביבי" , day:"שלישי"},
                   {name:"בוזי" , day:"ראשון"},
                   {name:"בוזי" , day:"שני"},
                   {name:"שלי יחיימוביץ" , day:"ראשון"},
                   {name:"שלי יחיימוביץ" , day:"ראשון"},
                   {name:"שלי יחיימוביץי" , day:"חמישי"},
                   {name:"בלה בלה" , day:"רביעי"},
                   {name:"בלה בלה" , day:"ראשון"}];


    $scope.tableCr= function() {
    var body = document.getElementsByTagName('body')[0];
    var tbl = document.createElement('table');
    tbl.style.width = '80%';
    tbl.style.height = '200px';
    tbl.style.float= 'right';
    tbl.style.margin= '70px -270px 0 0';

    tbl.setAttribute('border', '1');
    var tbdy = document.createElement('tbody');
    for (var i = 0; i < $scope.pepole.length+2; i++) {
        var tr = document.createElement('tr');
        for (var j = 0; j < $scope.days.length+1; j++) {
                var td = document.createElement('td');
                td.style.width="40px";
                td.style.height="20px";
                td.appendChild(document.createTextNode('\u0020'));
                tr.appendChild(td);
                if(j ==$scope.days.length  ){
                    td.setAttribute('class', 'no-border-right');
                }
                else if(i==0 && j!=$scope.days.length){
                    td.setAttribute('class', 'bold');
                }

            }
        tbdy.appendChild(tr);
    }
    tbl.appendChild(tbdy);
    body.appendChild(tbl);
    // set days:
    var row=0;
    var column=0;
    var i=0;
    for(  var j=$scope.days.length-1 ; j>=0 ; j--, i++)
    {
        $('table').find('tr:eq(0)').find('td:eq('+j+')').html($scope.days[i].name);
    }

    //set pepole:
    i=0;
    var len=$scope.days.length;   
    $('table').find('tr:eq('+1+')').find('td:eq('+len+')').html("איזכורי שואה");
    for(var j=2; j<$scope.pepole.length+3; j++, i++)
    {
        $('table').find('tr:eq('+j+')').find('td:eq('+len+')').html($scope.pepole[i]);
    }


    //set statuses:
    var row=0;
    var column=0;
    for(i=0 , j=0; i<$scope.statuses.length , j<$scope.days.length; j++, i++)
    {   

        //check the man who said this
        for(var z=0; z<$scope.pepole.length ; z++)
            {if($scope.statuses[i].name == $scope.pepole[z])
                row=z+2;
            }


        //check the day which the status written

        for(var z=0; z<$scope.days.length ; z++)
            {if($scope.statuses[i].day == $scope.days[z].name)
                {
                $scope.days[z].counter++;
                column=z+1;
                }
            }

    var s=len-column
    $('table').find('tr:eq('+row+')').find('td:eq('+s+')').append("<p class='color2'>&#9660</p>");

    }


    var query="<select class='selecting'><option value='week'>-השבוע-</option><option value='month'>-החודש-</option><option value='year'>-השנה-</option></select>"
    $('table').find('tr:eq(0)').find('td:eq('+len+')').append(query);
    //set counter in 1 row:

    for(var j=$scope.days.length-1, i=0 ; j>=0 , i<$scope.days.length ; j--, i++)
    {
        for(var g=0; g < $scope.days[i].counter; g++)
        $('table').find('tr:eq(1)').find('td:eq('+j+')').append("<p class='color1'>&#9660</p>");
    }

   }

    $scope.tableCr();

});




















//DB schema:
var feed = require('./feed');
// var EXdata = require('./EXdata');

var http = require('http');

var urlSet = [
//         // 'https://api.twitter.com/1.1/search/tweets.json?q=%D7%A9%D7%95%D7%90%D7%94%20OR%20%D7%90%D7%A0%D7%98%D7%99%D7%A9%D7%9E%D7%99%D7%95%D7%AA&since_id=33473850',
            //'shoa'  :
            'http://kikar.org/api/v1/facebook_status/?limit=1000&feed__is_current=true&content__contains=%D7%A9%D7%95%D7%90%D7%94&published__gte=2016-11-01',
            //'antis' : 
            'http://kikar.org/api/v1/facebook_status/?limit=100&feed__is_current=true&content__contains=%D7%90%D7%A0%D7%98%D7%99%D7%A9%D7%9E%D7%99&published__gte=2016-11-01',
            //'nazi'  : 
            'http://kikar.org/api/v1/facebook_status/?limit=100&feed__is_current=true&content__contains=%D7%A0%D7%90%D7%A6%D7%99&published__gte=2016-11-01',
            //'hitler'  : 
            'http://kikar.org/api/v1/facebook_status/?limit=100&feed__is_current=true&content__contains=%D7%94%D7%99%D7%98%D7%9C%D7%A8&published__gte=2016-11-01'
            ];

var body = '', data1;

http = http.get(urlSet[0], function(res){
    
    res.on('data', function(chunk){
        body += chunk;
    });

    res.on('end', function(){
        data1= JSON.parse(body);
        console.log('done!');
    });
}).on('error', function(e){
      console.log("Got an error: ", e);
});

exports.default = function(req, res, next){

    var data2 =[], temp={}; 
    data1.objects.forEach(function(obj){
        if (obj.has_attachment ==null){
            temp={
                    "content": obj.content,
                    "content_snippet": obj.content_snippet,
                    "facebook_link": obj.facebook_link,
                    "has_attachment": false,
                    "id": obj.id,
                    "like_count": obj.like_count,
                    "member": obj.member,
                    "party": obj.party,
                    "published": obj.published
                    };
                    data2.push(temp);
        }
        else{
            temp={
                    "attachment":{
                        "is_photo": obj.attachment.is_photo,
                        "link: obj": obj.attachment.link,
                        "name": obj.attachment.name,
                        "picture": obj.attachment.picture,
                        "source": obj.attachment.source,
                    },
                    "content": obj.content,
                    "content_snippet": obj.content_snippet,
                    "facebook_link": obj.facebook_link,
                    "has_attachment": obj.has_attachment,
                    "id": obj.id,
                    "like_count": obj.like_count,
                    "member": obj.member,
                    "party": obj.party,
                    "published": obj.published
            };
            data2.push(temp);
        };
        // console.log(temp);
        feed.collection.update({"id": obj.id}, temp, {upsert: true}, function(err, records){
                console.log("Record added as: "+obj.id);
        });
    });

    res.send(data2);
};

// exports.updateDB = function(req, res, next){
//     res.send(data1);
// };

exports.getFeedsByName = function(req, res){
    var query = feed.find({member:req.params.member});
    query.exec(function(err, data) {
        if (err) return res.send(err);
            res.status(200).json(data);
        console.log(data);
    });

};

exports.getAllFeeds = function(req, res){
    console.log('hi');
    var query = feed.find({});
    query.exec(function(err, data) {
        if (err) return res.send(err);
            res.status(200).json(data);
        console.log(data);
    });

};

exports.getFeedsFromTo = function(req, res){
    console.log(req.params.from);
    var query = feed.find({published: {$gte: req.params.from , $lte: req.params.to }});
    query.exec(function(err, data) {
        if (err) return res.send(err);
            res.status(200).json(data);
        console.log(data);
    });

};

exports.getAllMembers = function(req, res){
    var query = feed.distinct('member');
    query.exec(function(err, data) {
        if (err) return res.send(err);
            res.status(200).json(data);
        console.log(data);
    });

};





























//new


var request = require('request');
var body = [], data1=[];
    
urlSet.forEach(function(url){
   request(url, function (error, response, _body) {
        if (!error && response.statusCode == 200) {
            // console.log(body)
            body.push(_body);
            data1.push(JSON.parse(_body));
            // Show the HTML for the Google homepage. 
            console.log('**********************************************************************************************************');
        // console.log(data1);
        }
        else{
            console.log(error);
        }
    }) 
});